---
AWSTemplateFormatVersion: 2010-09-09

Description: CI/CD with Micro Focus and AWS

Parameters:
  SourceRepositoryName:
    Type: String
    Description: Name of the CodeCommit repository
  EcrRepositoryName:
    Type: String
    Description: Name of the CodeCommit repository    
  BuildDockerImage:
    Type: String
    Default: aws/codebuild/ubuntu-base:14.04
    Description: Docker image to use for the build phase

Resources:
  ArtifactS3Bucket:
    Type: AWS::S3::Bucket
  
  PipelineS3Bucket:
    Type: AWS::S3::Bucket
    
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Action: 'sts:AssumeRole'
          Principal:
            Service: codebuild.amazonaws.com
        Version: 2012-10-17
      Policies:
        - PolicyName: CanLog
          PolicyDocument: 
            Version: 2012-10-17
            Statement: 
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:CreateLogGroup
                  - logs:PutLogEvents
                Resource:
                  - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${AWS::StackName}*:log-stream:*'
        - PolicyName: CanAccessS3
          PolicyDocument: 
            Version: 2012-10-17
            Statement: 
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                Resource:
                  - !GetAtt PipelineS3Bucket.Arn
                  - !Sub '${PipelineS3Bucket.Arn}/*'
                  - !GetAtt ArtifactS3Bucket.Arn
                  - !Sub '${ArtifactS3Bucket.Arn}/*'                  
        - PolicyName: CanAccessEcr
          PolicyDocument: 
            Version: 2012-10-17
            Statement: 
              - Effect: Allow
                Action:
                - "ecr:GetDownloadUrlForLayer"
                - "ecr:BatchGetImage"
                - "ecr:BatchCheckLayerAvailability"
                Resource:
                - !Sub "arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/${EcrRepositoryName}"

  BuildStage:
    Type: AWS::CodeBuild::Project
    Properties: 
      Name: !Sub '${AWS::StackName}Build'
      Artifacts:
        Type: CODEPIPELINE
        EncryptionDisabled: true
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: STAGE
            Type: PLAINTEXT
            Value: BUILD
        Image: !Ref BuildDockerImage
        Type: LINUX_CONTAINER
      ServiceRole: !Ref CodeBuildRole
      Source:
        Type: CODEPIPELINE

  TestStage:
    Type: AWS::CodeBuild::Project
    Properties: 
      Name: !Sub '${AWS::StackName}Test'
      Artifacts:
        Type: CODEPIPELINE
        EncryptionDisabled: true
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: STAGE
            Type: PLAINTEXT
            Value: TEST
        Image: !Ref BuildDockerImage
        Type: LINUX_CONTAINER
      ServiceRole: !Ref CodeBuildRole
      Source:
        Type: CODEPIPELINE

  DeployStage:
    Type: AWS::CodeBuild::Project
    Properties: 
      Name: !Sub '${AWS::StackName}Deployment'
      Artifacts:
        Type: CODEPIPELINE
        EncryptionDisabled: true
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: STAGE
            Type: PLAINTEXT
            Value: DEPLOY
        Image: !Ref BuildDockerImage
        Type: LINUX_CONTAINER
      ServiceRole: !Ref CodeBuildRole
      Source:
        Type: CODEPIPELINE
        BuildSpec: deployspec.yml

  PipelineRole:
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement: 
          - Effect: Allow
            Principal: 
              Service: [codepipeline.amazonaws.com]
            Action: ['sts:AssumeRole']
      Policies:
        - PolicyName: CanAccessCodeCommit
          PolicyDocument: 
            Version: 2012-10-17
            Statement: 
              - Effect: Allow
                Action:
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - codecommit:UploadArchive
                  - codecommit:GetUploadArchiveStatus
                Resource:
                  - !Sub 'arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${SourceRepositoryName}'
                  - !Sub 'arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${SourceRepositoryName}/*'
        - PolicyName: CanAccessS3
          PolicyDocument: 
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: s3:ListBucket
                Resource: '*'
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
                  - s3:PutObject
                  - s3:GetBucketPolicy
                  - s3:GetObjectAcl
                  - s3:PutObjectAcl
                  - s3:DeleteObject
                Resource:
                  - !GetAtt PipelineS3Bucket.Arn
                  - !Sub '${PipelineS3Bucket.Arn}/*'
              - Effect: Allow
                Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                Resource:
                  - !GetAtt BuildStage.Arn
                  - !GetAtt DeployStage.Arn
                  - !GetAtt TestStage.Arn

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineS3Bucket
      RestartExecutionOnUpdate: false
      RoleArn: !GetAtt PipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: 1
              Configuration:
                RepositoryName: !Ref SourceRepositoryName
                BranchName: master
              OutputArtifacts:
                - Name: Source
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName : !Ref BuildStage
              InputArtifacts:
                - Name: Source
              OutputArtifacts:
                - Name: BuildStage
              RunOrder: 1
        - Name: Test
          Actions:
            - Name: Test
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName : !Ref TestStage
              InputArtifacts:
                - Name: BuildStage
              OutputArtifacts:
                - Name: TestStage
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: Approval
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: 1
              RunOrder: 1
            - Name: Deploy
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName : !Ref DeployStage
              InputArtifacts:
                - Name: TestStage
              OutputArtifacts:
                - Name: DeployStage
              RunOrder: 2

Outputs:
  CodeBuildRoleArn:
    Description: IAM Role ARN associated with CodeBuild projects
    Value: !GetAtt CodeBuildRole.Arn
  CodeBuildRoleName:
    Description: IAM Role name associated with CodeBuild projects
    Value: !Ref CodeBuildRole
  ArtifactS3BucketName:
    Description: An S3 Bucket stores Artifacts
    Value: !Ref ArtifactS3Bucket