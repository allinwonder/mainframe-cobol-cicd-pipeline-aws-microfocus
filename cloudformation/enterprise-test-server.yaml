AWSTemplateFormatVersion: 2010-09-09
Description: MicroFocus Enterprise Test Server

Parameters:
  AMI:
    Type: "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>"
    Description: Latest Windows 2016 AMI
    Default: "/aws/service/ami-windows-latest/Windows_Server-2019-English-Full-Base"
  PrivateSubnetId:
    Type: AWS::EC2::Subnet::Id
    Description: Id of a subnet where Enterprise Test Service is deploy into
  ArtifactBucketName:
    Type: String
    Description: Name of an S3 Bucket contains application artifacts
  InstanceType:
    Type: String
    Default: m3.large
    AllowedValues:
    - t1.micro
    - t2.micro
    - t2.small
    - t2.medium
    - m1.small
    - m1.medium
    - m1.large
    - m1.xlarge
    - m2.xlarge
    - m2.2xlarge
    - m2.4xlarge
    - m3.medium
    - m3.large
    - m3.xlarge
    - m3.2xlarge
    - c1.medium
    - c1.xlarge
    - c3.large
    - c3.xlarge
    - c3.2xlarge
    - c3.4xlarge
    - c3.8xlarge
    - c4.large
    - c4.xlarge
    - c4.2xlarge
    - c4.4xlarge
    - c4.8xlarge
    - g2.2xlarge
    - r3.large
    - r3.xlarge
    - r3.2xlarge
    - r3.4xlarge
    - r3.8xlarge
    - i2.xlarge
    - i2.2xlarge
    - i2.4xlarge
    - i2.8xlarge
    - d2.xlarge
    - d2.2xlarge
    - d2.4xlarge
    - d2.8xlarge
    - hi1.4xlarge
    - hs1.8xlarge
    - cr1.8xlarge
    - cc2.8xlarge
    - cg1.4xlarge
    ConstraintDescription: Must be a valid EC2 instance type.
  VPC: 
    Description: VPC Id for Enterprise Test Server
    Type: AWS::EC2::VPC::Id

Resources: 
  EnterpriseTestServerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforAWSCodeDeploy
      - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      Policies: 
      - PolicyName: "additionalPermissions"
        PolicyDocument: 
          Version: "2012-10-17"
          Statement: 
          - Effect: "Allow"
            Action: 
            -  cloudformation:DescribeStackResource
            -  cloudformation:DescribeStackResources
            -  cloudformation:DescribeStacks
            -  cloudformation:SignalResource
            Resource: "*"
      - PolicyName: "S3ReadAccess"
        PolicyDocument: 
          Version: "2012-10-17"
          Statement: 
          - Effect: "Allow"
            Action: 
            - s3:GetObject
            Resource: 
            - !Sub "arn:aws:s3:::${ArtifactBucketName}" 
            - !Sub "arn:aws:s3:::${ArtifactBucketName}/*" 

  EnterpriseTestServerProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
      - Ref: EnterpriseTestServerRole

  EnterpriseTestServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to client host
      VpcId: !Ref VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '3389'
        ToPort: '3389'
        CidrIp: 0.0.0.0/0

  EnterpriseTestServer:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        config:
          commands:
            00-download-host-agent:
              command:
                Fn::Join:
                - ''
                - - 'powershell.exe -Command "Read-S3Object '
                  - !Sub "-BucketName aws-codedeploy-${AWS::Region} "
                  - "-Key latest/codedeploy-agent.msi "
                  - -File codedeploy-agent.msi"
              cwd: C:/cfn
              waitAfterCompletion: 0
            01-install-host-agent:
              command: C:\cfn\codedeploy-agent.msi /quiet /l C:\cfn\host-agent-install-log.txt
              ignoreErrors: 'true'
              waitAfterCompletion: 0
            02-signal-ready:
              command:
                Fn::Join:
                - ''
                - - '"C:\Program Files\Amazon\cfn-bootstrap\cfn-signal"'
                  - ' -e 0 "'
                  - Ref: WaitHandle
                  - "\""
              waitAfterCompletion: 0
          services:
            windows:
              codedeploy-agent:
                enabled: 'true'
                ensureRunning: 'true'
                commands:
                - 01-install-host-agent
    Properties:
      ImageId: !Ref AMI
      InstanceType: !Ref InstanceType
      SubnetId: !Ref PrivateSubnetId
      SecurityGroupIds: 
      - !GetAtt EnterpriseTestServerSecurityGroup.GroupId
      UserData:
        Fn::Base64:
          Fn::Join:
          - ''
          - - "<script>\n"
            - 'mkdir c:\cfn'
            - 'mkdir c:\cfn\log'
            - 'c:\"Program Files"\Amazon\cfn-bootstrap\cfn-init.exe -s '
            - Ref: AWS::StackName
            - " --region "
            - Ref: AWS::Region
            - " -r EnterpriseTestServer > c:\\cfn\\log\\cfn-call-log 2>&1"
            - "</script>"
      Tags:
      - Key: Solution
        Value: mainframe-cobol-cicd-aws-microfocus
      - Key: Name
        Value: Enterprise Test Server
      - Key: Stack
        Value: Enterprise Test Server
      IamInstanceProfile: !Ref EnterpriseTestServerProfile
  WaitHandle:
    Type: AWS::CloudFormation::WaitConditionHandle
  WaitCondition:
    Type: AWS::CloudFormation::WaitCondition
    Properties:
      Count: 1
      Handle: !Ref WaitHandle
      Timeout: '900'
